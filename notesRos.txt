!! faire un source devel/setup.bash pour avoir les commandes roscore...

pour créer un workspace : 
  créer un dossier src (dans le ws)
  puis catkin_make

mettre des packages : 
  aller dans cd catkin_ws/ src
  catkin_create_pkg turtlebot_control roscpp rospy std_msgs geometry_msgs
  #roscpp est un compileur 

puis refaire catkin_make dans le dossier catkin_ws
#il crée la structure de nos packages

#ne pas hesiter à faire un git pour tout mettre dessus

dans turtlebot_control_src :
  touch bascic_controller.cpp # création d'un scrpit en cpp
  essayer de print "hello" dedans
  Changer et décommenter le CMakeLists.txt #lignes 150, 137
  ne pas oublier de sauvegarder le fichier CMakeLists.txt

catkin_make (pour "build" le ws)
source devel/setup.bash (si tu es à la base du ws autrement, ce serait source setup.bash si tu es déjà dans "devel)
rosrun turtlebot_control basic_controller 

il faut parfois un master # ne pas oublier de faire un roscore
puis ouvir un nouveau terminal
rosrun turtlesim turtlesim_node

Pour voir le graphe des connections : rqt_graph

Une fois fait "rosrun turtlesim turtlesim_node  #créer une tortue

ros sudo apt install ros-noetic_teleop_twist_keyboard
rosrun teleop_twist_keyboard teleop_twist_keyboard.py cmd_vel:=turtle1/cmd_vel     #pour controller avec le pad, très golri
